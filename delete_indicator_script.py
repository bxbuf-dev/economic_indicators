# delete_indicator.py - –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∏–∑ –ë–î
import sqlite3
from pathlib import Path

# --- –ü—É—Ç—å –∫ –ë–î ---
home_dir = Path.home()
DB_PATH = home_dir / 'Documents' / 'economic_indicators.db'

def list_all_indicators():
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –≤ –ë–î"""
    try:
        conn = sqlite3.connect(DB_PATH)
        cursor = conn.cursor()
        
        cursor.execute("""
            SELECT id, name, full_name, source, 
                   (SELECT COUNT(*) FROM indicator_values WHERE indicator_id = i.id) as values_count,
                   created_at
            FROM indicators i
            ORDER BY id
        """)
        
        indicators = cursor.fetchall()
        
        if not indicators:
            print("‚ùå –í –ë–î –Ω–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤")
            return []
        
        print("üìä –ò–ù–î–ò–ö–ê–¢–û–†–´ –í –ë–ê–ó–ï –î–ê–ù–ù–´–•:")
        print("="*80)
        
        for row in indicators:
            id_val, name, full_name, source, values_count, created_at = row
            print(f"ID: {id_val}")
            print(f"–ù–∞–∑–≤–∞–Ω–∏–µ: {name}")
            print(f"–ü–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: {full_name}")
            print(f"–ò—Å—Ç–æ—á–Ω–∏–∫: {source}")
            print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞—á–µ–Ω–∏–π: {values_count}")
            print(f"–°–æ–∑–¥–∞–Ω: {created_at}")
            print("-" * 40)
        
        conn.close()
        return indicators
        
    except sqlite3.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤: {e}")
        return []

def delete_indicator_by_id(indicator_id):
    """–£–¥–∞–ª–∏—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–æ ID"""
    try:
        conn = sqlite3.connect(DB_PATH)
        cursor = conn.cursor()
        
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
        cursor.execute("SELECT name, full_name FROM indicators WHERE id = ?", (indicator_id,))
        indicator = cursor.fetchone()
        
        if not indicator:
            print(f"‚ùå –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å ID {indicator_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            conn.close()
            return False
        
        name, full_name = indicator
        print(f"üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞:")
        print(f"   ID: {indicator_id}")
        print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {name}")
        print(f"   –ü–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: {full_name}")
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏
        cursor.execute("SELECT COUNT(*) FROM indicator_values WHERE indicator_id = ?", (indicator_id,))
        values_count = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM indicator_releases WHERE indicator_id = ?", (indicator_id,))
        releases_count = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM comments WHERE indicator_id = ?", (indicator_id,))
        comments_count = cursor.fetchone()[0]
        
        print(f"   üìà –ó–Ω–∞—á–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: {values_count}")
        print(f"   üìÑ –†–µ–ª–∏–∑–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: {releases_count}")
        print(f"   üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: {comments_count}")
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        confirm = input("\n‚ùì –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ (y/N): ").strip().lower()
        if confirm not in ['y', 'yes', '–¥', '–¥–∞']:
            print("‚úã –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            conn.close()
            return False
        
        # –£–¥–∞–ª—è–µ–º –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (—Å–Ω–∞—á–∞–ª–∞ –∑–∞–≤–∏—Å–∏–º—ã–µ —Ç–∞–±–ª–∏—Ü—ã)
        print("\nüóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...")
        
        cursor.execute("DELETE FROM comments WHERE indicator_id = ?", (indicator_id,))
        print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {cursor.rowcount}")
        
        cursor.execute("DELETE FROM indicator_releases WHERE indicator_id = ?", (indicator_id,))
        print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ —Ä–µ–ª–∏–∑–æ–≤: {cursor.rowcount}")
        
        cursor.execute("DELETE FROM indicator_values WHERE indicator_id = ?", (indicator_id,))
        print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–π: {cursor.rowcount}")
        
        cursor.execute("DELETE FROM indicators WHERE id = ?", (indicator_id,))
        print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä: {cursor.rowcount}")
        
        conn.commit()
        conn.close()
        
        print(f"\nüéâ –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä {indicator_id} ({name}) —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!")
        return True
        
    except sqlite3.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞: {e}")
        if conn:
            conn.rollback()
            conn.close()
        return False

def delete_indicator_by_name(indicator_name):
    """–£–¥–∞–ª–∏—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é"""
    try:
        conn = sqlite3.connect(DB_PATH)
        cursor = conn.cursor()
        
        cursor.execute("SELECT id FROM indicators WHERE name = ?", (indicator_name,))
        result = cursor.fetchone()
        conn.close()
        
        if result:
            return delete_indicator_by_id(result[0])
        else:
            print(f"‚ùå –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º '{indicator_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
            
    except sqlite3.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞: {e}")
        return False

def main():
    print("üóëÔ∏è  –°–ö–†–ò–ü–¢ –£–î–ê–õ–ï–ù–ò–Ø –ò–ù–î–ò–ö–ê–¢–û–†–û–í")
    print("="*50)
    
    if not DB_PATH.exists():
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {DB_PATH}")
        return
    
    while True:
        print("\nüìã –ú–ï–ù–Æ:")
        print("1. –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã")
        print("2. –£–¥–∞–ª–∏—Ç—å –ø–æ ID")
        print("3. –£–¥–∞–ª–∏—Ç—å –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é")
        print("4. –í—ã—Ö–æ–¥")
        
        choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-4): ").strip()
        
        if choice == '1':
            list_all_indicators()
            
        elif choice == '2':
            try:
                indicator_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: "))
                delete_indicator_by_id(indicator_id)
            except ValueError:
                print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID")
                
        elif choice == '3':
            indicator_name = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ").strip()
            if indicator_name:
                delete_indicator_by_name(indicator_name)
            else:
                print("‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
                
        elif choice == '4':
            print("üëã –í—ã—Ö–æ–¥")
            break
            
        else:
            print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä")

if __name__ == "__main__":
    main()